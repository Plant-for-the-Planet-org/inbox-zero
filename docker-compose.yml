name: inbox-zero-services
services:
  serverless-redis-http:
    ports:
      - "${REDIS_HTTP_PORT:-8079}:80"
    image: hiett/serverless-redis-http:latest
    env_file:
      - ./apps/web/.env
    environment:
      SRH_MODE: env
      SRH_TOKEN: ${UPSTASH_REDIS_TOKEN}
      SRH_CONNECTION_STRING: "${REDIS_URL}" # I'm creating a seprate redis instance and passing it here.
    networks:
      - inbox-zero-network

  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.web
    env_file:
      - ./.env
    ports:
      - ${WEB_PORT:-3000}:3000
    networks:
      - inbox-zero-network
    environment:
      DIRECT_URL: "${DATABASE_URL}"
      UPSTASH_REDIS_URL: "http://serverless-redis-http:80" #this url is exposed by the serverless-redis-http container.
      UPSTASH_REDIS_TOKEN: "${UPSTASH_REDIS_TOKEN}" #this token is passed to serverless-redis-http container, generate it on your own.
      NEXT_PUBLIC_APP_HOME_PATH: "/automation"

volumes:
  database-data:

networks:
  inbox-zero-network:
